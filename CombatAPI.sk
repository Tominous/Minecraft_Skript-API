# +---------------------------+
#    API made by CombatMC
#
# +---------------------------+

function api_getPlayerName(uuid: text, returnUNIX: boolean=false) :: texts:
	replace all "-" with "" in {_uuid}
	set {_nameList} to text from "https://api.mojang.com/user/profiles/%{_uuid}%/names"
	set {_draft::*} to {_nameList} split by """"
	set {_loopToggle} to true
	set {_getDraft} to 2
	while ({_loopToggle}):
		if {_draft::%{_getDraft}%} is "name":
			add 2 to {_getDraft}
#			send "%{_getDraft}%: %{_draft::%{_getDraft}%}%" to all players
			add "%{_draft::%{_getDraft}%}%" to {_names::*}
			add 2 to {_getDraft}
		else if {_draft::%{_getDraft}%} is "changedToAt":
			if {_returnUNIX} is true:
				set {_amountNames} to amount of {_names::*}
				set {_amountDraft} to ({_getDraft} + 1)
				set {_UNIX} to {_draft::%{_amountDraft}%}
				replace all ":" with "" in {_UNIX}
				replace all "},{" with "" in {_UNIX}
				replace all "}]" with "" in {_UNIX}
				set {_names::%{_amountNames}%} to "%{_names::%{_amountNames}%}%:%{_UNIX}%"
			add 2 to {_getDraft}
		else:
			set {_loopToggle} to false
	return {_names::*}

function api_getPlayerUUID(name: text) :: text:
	set {_userData} to text from "https://api.mojang.com/users/profiles/minecraft/%{_name}%"
	set {_draft::*} to {_userData} split by """"
	return {_draft::4}

function api_getNumberDisplay(number: number) :: text:
	set {_times} to 1
	while (true):
		if {_number} < (1000 ^ {_times}):
			set {_number} to ({_number} / (1000 ^ ({_times} - 1)))
			exit 1 loop
		add 1 to {_times}
	if {_times} is 1:
		set {_display} to ""
	else if {_times} is 2:
		set {_display} to "K"
	else if {_times} is 3:
		set {_display} to "M"
	else if {_times} is 4:
		set {_display} to "B"
	else if {_times} is 5:
		set {_display} to "T"
	else if {_times} is 6:
		set {_display} to "Qa"
	else if {_times} is 7:
		set {_display} to "Qi"
	else:
		return "FAIL"
	return "%{_number}%%{_display}%"

function api_unixToDate(UNIX: number) :: date:
	set {_date} to date(1970,1,1)
	if {_UNIX} > 0:
		add ("%{_UNIX}% seconds" parsed as time span) to {_date}
	else if {_UNIX} < 0:
		remove ("%{_UNIX}% seconds" parsed as time span) from {_date}
	return {_date}

function api_toUpperCase(text: text) :: text:
	replace "a" with "A" in {_text}
	replace "b" with "B" in {_text}
	replace "c" with "C" in {_text}
	replace "d" with "D" in {_text}
	replace "e" with "E" in {_text}
	replace "f" with "F" in {_text}
	replace "g" with "G" in {_text}
	replace "h" with "H" in {_text}
	replace "i" with "I" in {_text}
	replace "j" with "J" in {_text}
	replace "k" with "K" in {_text}
	replace "l" with "L" in {_text}
	replace "m" with "M" in {_text}
	replace "n" with "N" in {_text}
	replace "o" with "O" in {_text}
	replace "p" with "P" in {_text}
	replace "q" with "Q" in {_text}
	replace "r" with "R" in {_text}
	replace "s" with "S" in {_text}
	replace "t" with "T" in {_text}
	replace "u" with "U" in {_text}
	replace "v" with "V" in {_text}
	replace "w" with "W" in {_text}
	replace "x" with "X" in {_text}
	replace "y" with "Y" in {_text}
	replace "z" with "Z" in {_text}
	return {_text}

function api_toLowerCase(text: text) :: text:
	replace "A" with "a" in {_text}
	replace "B" with "b" in {_text}
	replace "C" with "c" in {_text}
	replace "D" with "d" in {_text}
	replace "E" with "e" in {_text}
	replace "F" with "f" in {_text}
	replace "G" with "g" in {_text}
	replace "H" with "h" in {_text}
	replace "I" with "i" in {_text}
	replace "J" with "j" in {_text}
	replace "K" with "k" in {_text}
	replace "L" with "l" in {_text}
	replace "M" with "m" in {_text}
	replace "N" with "n" in {_text}
	replace "O" with "o" in {_text}
	replace "P" with "p" in {_text}
	replace "Q" with "q" in {_text}
	replace "R" with "r" in {_text}
	replace "S" with "s" in {_text}
	replace "T" with "t" in {_text}
	replace "U" with "u" in {_text}
	replace "V" with "v" in {_text}
	replace "W" with "w" in {_text}
	replace "X" with "x" in {_text}
	replace "Y" with "y" in {_text}
	replace "Z" with "z" in {_text}
	return {_text}